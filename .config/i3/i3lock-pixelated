#!/usr/bin/env bash

prelock() {
    if [ ! -z "$(pidof dunst)" ]; then
        pkill -u "$USER" -USR1 dunst
    fi
}

postlock() {
    if [ ! -z "$(pidof dunst)" ] ; then
        pkill -u "$USER" -USR2 dunst
    fi
}

lock(){
    prelock

    # rectangles=" "
    # SR=$(xrandr --query | grep ' connected' | grep -o '[0-9][0-9]*x[0-9][0-9]*[^ ]*')
    # for RES in $SR; do
    #   SRA=(${RES//[x+]/ })
    #   CX=$((${SRA[2]} + 25))
    #   CY=$((${SRA[1]} - 30))
    #   rectangles+="rectangle $CX,$CY $((CX+300)),$((CY-80)) "
    # done

    # scrot /tmp/lock.png
    # convert /tmp/lock.png -draw "fill rgba(0, 0, 0, 0.4) $rectangles" /tmp/lock2.png

    letterEnteredColor="#d23c3dff"
    letterRemovedColor="#d23c3dff"
    passwordCorrect="#00000000"
    passwordIncorrect="#d23c3dff"
    background="#00000000"
    foreground="#ffffffff"
    accent="#d23c3dff"

    i3lock-extra --unsecure -s -g -p --paint -o "$HOME/.config/i3/lock.png" -- -t -k \
        --datepos="x+43:h-45" \--date-align 1 --datecolor="$accent" --datestr "%A, %B %d" \
        --timepos="x+43:h-70" --time-align 1 --timecolor="$accent" \
        --insidecolor=$background --ringcolor=$foreground --line-uses-inside \
        --keyhlcolor=$letterEnteredColor --bshlcolor=$letterRemovedColor --separatorcolor=$background \
        --insidevercolor=$passwordCorrect --insidewrongcolor=$passwordIncorrect \
        --ringvercolor=$foreground --ringwrongcolor="$foreground" --ring-width=4 \
        --veriftext="" --wrongtext="GTFO!" --verifcolor="$foreground"  --noinputtext="Empty"
    postlock
}


for arg in "$@"; do
    [[ "${arg:0:1}" = '-' ]] || continue

    case "$1" in

        -s | --suspend)
            runsuspend=true
            ;&

        -l | --lock)
            runlock=true
            [[ $runsuspend ]] || lockargs="$lockargs -n"
            [[ ${2:0:1} = '-' ]] && shift 1 || { lockstyle="$2"; shift 2; }
            ;;

        *)
            echo "invalid argument: $1"
            break
            ;;
    esac
done


# Activate lockscreen
[[ $runlock ]] && lock && \
	{ [[ $runsuspend ]] && systemctl suspend; }

exit 0
